import streamlit as st
import datetime
import requests
import sys

BASE_URL = "http://localhost:8000" # Backend endpoint 

# Tab config
st.set_page_config(
    page_title="AI Travel Planner",
    page_icon="🌍",
    layout="centered"
)

# Title
st.markdown(
    "<h1 style='text-align: center;'>✈️ AI Travel Planner</h1>",
    unsafe_allow_html=True
)

# Technologies Used
st.markdown("#### 🧰 Powered By")
col1, col2 = st.columns(2)

with col1:
    st.markdown("🧠 **LLM Orchestrator:** LangGraph")
    st.markdown("🌤️ **Live Weather:** [OpenWeatherMap](https://openweathermap.org/)")

with col2:
    st.markdown("📍 **Place Search:** Google Places & Tavily")
    st.markdown("💱 **Currency Rates:** [ExchangeRate API](https://www.exchangerate-api.com/)")

# Initialise chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

# Header
st.header("I’ll help you plan your journey — where to?")

# Form
with st.form(key="query_form",clear_on_submit=True):
    user_input = st.text_input("User Input", placeholder="eg: Plan a trip to Goa for 5 days")
    submit_button = st.form_submit_button("Send")

if submit_button and user_input.strip():
    try:
        with st.spinner("Bot is thinking..."):
            payload = {"question": user_input}
            response = requests.post(f"{BASE_URL}/query", json=payload)

        if response.status_code == 200:
            answer = response.json().get("answer", "No answer returned")

            markdown_content = f'''
            # 🤖 AI Travel Plan
            # **Generated:** {datetime.datetime.now().strftime('%Y-%m-%d at %H:%M')}
            # **Created by:** Adon's Agentic Application
            ---
            {answer}
            ---

            *This travel plan was generated by AI. 
            Please verify all information, especially prices, operating hours, and travel requirements before your trip.*
            '''
            st.markdown(markdown_content)
        else:
            st.error("Bot failed to respond: " + response.text)

    except Exception as e:
        raise Exception(f"The response failed due to {e}")
